# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AuthResponse {
  success: Boolean!
}

type Mutation {
  """Delete a user from the application."""
  deleteUser(user_id: String!): User

  """
  Check whether the client is signed in, ensures theauthToken cookie (httpOnly) is present in the database andassociated with a user.
  """
  isSignedIn: User

  """
  Sign into the application, if the supplied credentialsare correct, the authToken httpOnly cookie is set.
  """
  signIn(data: SignInInput!): User

  """Sign out of the application, revoking authToken."""
  signOut: AuthResponse!

  """
  Sign out of the application on all currentlyauthorized clients, including the client sending the request.Required to sign in again.
  """
  signOutAll(data: SignInInput!): AuthResponse!

  """
  Sign up, creating a new user/account, and signing inthe user automatically. The first account created is automaticallyset as an admin.
  """
  signUp(data: SignUpInput!): User

  """
  Update the users password. Requires the client tosign-in again (i.e provide username & password).
  """
  updatePassword(data: SignInInput!): AuthResponse!
}

type Query {
  """Query a user, must be logged in."""
  user(user_id: String!): User
}

input SignInInput {
  password: String!
  username: String!
}

input SignUpInput {
  details: UserDetailsInput!
  password: String!
  username: String!
}

type User {
  adminPriority: Float
  details: UserDetails
  user_id: ID!
  username: String!
}

type UserDetails {
  email: String!
  real_name: String!
}

input UserDetailsInput {
  email: String!
  real_name: String!
}
